#!/usr/bin/env node

import { createServer } from 'http';
import debugLib from 'debug';
import app from '../app.js';

const debug = debugLib('custom-express-project:server');

const port = normalizePort(process.env.PORT || '3007');
app.set('port', port);

const server = createServer(app);
server.listen(port, () => {
  console.log('Server is running on port ' + port);
});
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  const p = parseInt(val, 10);
  if (isNaN(p)) {
    return val;
  }
  if (p >= 0) {
    return p;
  }
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
